require("rgl")
options(scipen=999) # Turn scientific notation display off.
initial.frame <- read.csv("public_train_100MeV.csv")
initial.frame <- read.csv("public_train_100MeV.csv")
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=runif(1, eta.bounds[1], eta.bounds[2])) %>%
mutate(z=((layer + 1) / tan(eta))) %>%
select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
arrange(event_id, cluster_id, r)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]), atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%q
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
layer.max
eta.bounds <- c(atan(layer.max / z.bounds[2]), atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%q
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
layer.max
eta.bounds <- c(atan(layer.max / z.bounds[2]), atan(layer.max / z.bounds[1]))
#MeV  <- initial.frame %>%
#        mutate(phi=atan2(y, x)) %>%q
#        group_by(event_id, cluster_id) %>%
#        mutate(eta=runif(1, eta.bounds[1], eta.bounds[2])) %>%
#        mutate(z=((layer + 1) / tan(eta))) %>%
#        select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
#        arrange(event_id, cluster_id, r)
#MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]), atan(layer.max / z.bounds[1]))
eta.bounds
#MeV  <- initial.frame %>%
#        mutate(phi=atan2(y, x)) %>%q
#        group_by(event_id, cluster_id) %>%
#        mutate(eta=runif(1, eta.bounds[1], eta.bounds[2])) %>%
#        mutate(z=((layer + 1) / tan(eta))) %>%
#        select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
#        arrange(event_id, cluster_id, r)
#MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(pi / 2 + layer.max / z.bounds[2]),
atan(pi / 2 + layer.max / z.bounds[1]))
eta.bounds
#MeV  <- initial.frame %>%
#        mutate(phi=atan2(y, x)) %>%q
#        group_by(event_id, cluster_id) %>%
#        mutate(eta=runif(1, eta.bounds[1], eta.bounds[2])) %>%
#        mutate(z=((layer + 1) / tan(eta))) %>%
#        select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
#        arrange(event_id, cluster_id, r)
#MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
eta.bounds
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%q
require("tidyr")
require("dplyr")
require("rgl")
options(scipen=999) # Turn scientific notation display off.
initial.frame <- read.csv("public_train_100MeV.csv")
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%q
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),
runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1)) %>%
mutate(z=((layer + 1) / tan(eta))) %>%
select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
arrange(event_id, cluster_id, r)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),
runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1)) %>%
mutate(z=((layer + 1) / tan(eta)))
MeV
#     select(event_id, cluster_id, r=(layer + 1), phi, z) %>%
#    arrange(event_id, cluster_id, r)
#MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),
runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1)) %>%
mutate(z=((layer + 1) / tan(eta))) %>%
select(event_id, cluster_id, r=(layer + 1), phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),
runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1)) %>%
mutate(z=((layer + 1) / tan(eta))) %>%
select(event_id, cluster_id, r=(1), phi, z)
arrange(event_id, cluster_id, r)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),
runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1)) %>%
mutate(z=((layer + 1) / tan(eta))) %>%
select(event_id, cluster_id, r=(1), phi, z) %>%
arrange(event_id, cluster_id, r)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- MeV %>% initial.frame
initial.frame <- read.csv("public_train_100MeV.csv")
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- MeV %>% initial.frame
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),                                                                        runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% select(event_id, cluster_id, r=(1), phi, z)
MeV  <- MeV %>% arrange(event_id, cluster_id, r)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),                                                                        runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=(1), phi, z)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi),                                                                        runif(1, eta.bounds[2] - pi, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer+1, phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer, phi, z)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=(layer + 1), phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer, phi, z)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer + 1, phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, layer + 1, phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer + numeric(1), phi, z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer, phi, z)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r=layer, phi, z, eta)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=((layer + 1) / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r, z, eta)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[1]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[1] + pi / 2),                                                                    runif(1, eta.bounds[2] - pi / 2, eta.bounds[2])),
1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=(r / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r, z, eta)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[2] + pi),
atan(layer.max / z.bounds[2]))
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[2] + pi),
atan(layer.max / z.bounds[2]))
print(eta.bounds[1] < eta.bounds[2])
print(eta.bounds[3] < eta.bounds[4])
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
print(eta.bounds[1] < eta.bounds[2])
print(eta.bounds[3] < eta.bounds[4])
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=(r / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r, z, eta)
MeV
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
stopifnot(eta.bounds[1] < eta.bounds[2])
stopifnot(eta.bounds[3] < eta.bounds[4])
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=(r * cot(eta)))
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
stopifnot(eta.bounds[1] < eta.bounds[2])
stopifnot(eta.bounds[3] < eta.bounds[4])
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=(r / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r, z, eta)
MeV
max(MeV$z)
z.bounds   <- c(-200, 200) # What should z vary between?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
stopifnot(eta.bounds[1] < eta.bounds[2])
stopifnot(eta.bounds[3] < eta.bounds[4])
MeV  <- initial.frame
MeV  <- MeV %>% mutate(phi=atan2(y, x))
MeV  <- MeV %>% group_by(event_id, cluster_id)
MeV  <- MeV %>% mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))
MeV  <- MeV %>% ungroup()
MeV  <- MeV %>% mutate(r=(layer + 1))
MeV  <- MeV %>% mutate(z=(r / tan(eta)))
MeV  <- MeV %>% arrange(event_id, cluster_id, layer)
MeV  <- MeV %>% select(event_id, cluster_id, r, z, eta)
MeV
min(MeV$z)
max(MeV$z)
require("tidyr")
require("dplyr")
require("rgl")
options(scipen=999) # Turn scientific notation display off.
initial.frame <- read.csv("public_train_100MeV.csv")
z.bounds   <- c(-200, 200) # What should the min and max z values be?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
stopifnot(eta.bounds[1] < eta.bounds[2]) # runif doesn't work correctly
stopifnot(eta.bounds[3] < eta.bounds[4]) # if these conditions are false.
MeV <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))%>%
ungroup() %>%
mutate(r=(layer + 1)) %>%
mutate(z=(r / tan(eta))) %>%
arrange(event_id, cluster_id, layer) %>%
select(event_id, cluster_id, r, z, eta)
min(MeV$z)
max(MeV$z)
MeV
write.csv(hits, "standard_curves100MeV.csv", row.names=TRUE)
require("tidyr")
require("dplyr")
require("rgl")
options(scipen=999) # Turn scientific notation display off.
initial.frame <- read.csv("public_train_100MeV.csv")
z.bounds   <- c(-200, 200) # What should the min and max z values be?
layer.max  <- max(initial.frame$layer) + 1
eta.bounds <- c(atan(layer.max / z.bounds[1] - pi),
atan(layer.max / z.bounds[1]),
atan(layer.max / z.bounds[2]),
atan(layer.max / z.bounds[2] + pi))
stopifnot(eta.bounds[1] < eta.bounds[2]) # runif doesn't work correctly
stopifnot(eta.bounds[3] < eta.bounds[4]) # if these conditions are false.
MeV <- initial.frame %>%
mutate(phi=atan2(y, x)) %>%
group_by(event_id, cluster_id) %>%
mutate(eta=sample(c(runif(1, eta.bounds[1], eta.bounds[2]),                                                                             runif(1, eta.bounds[3], eta.bounds[4])), 1))%>%
ungroup() %>%
mutate(r=(layer + 1)) %>%
mutate(z=(r / tan(eta))) %>%
arrange(event_id, cluster_id, layer) %>%
select(event_id, cluster_id, r, phi, z)
min(MeV$z)
max(MeV$z)
MeV
write.csv(hits, "standard_curves100MeV.csv", row.names=TRUE)
write.csv(MeV, "standard_curves100MeV.csv", row.names=TRUE)
